name: infrastructure
services:
  nginx:
    image: "nginx:1.25.4"
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - external_net
      - internal_net
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d        #конф. файл nginx
      - ./nginx/html:/usr/share/nginx/html    #веб-странички
      - ./nginx/https:/etc/nginx/https             #сертификаты и прочее для https
      # - ./nginx/https/ssl/ssl_params:/etc/nginx/             #сертификаты и прочее для https
      # - ./pki:/etc/nginx
    # command: openssl dhparam -out /etc/nginx/https/ssl/dhparam.pem 2048
    # command: sleep infinity
    depends_on:
      - flask

  flask:
    build: ./python/
    networks:
      internal_net:
        aliases:
          - flask
    volumes:
      - ./app:/app
    deploy: 
      replicas: 2
    restart: on-failure
    command: python app.py



  ca:
    build: ./certificate/
    container_name: ca-cert
    # env_file: .env_certs
    volumes:
      # - ./pki_conf:/pki
      - ./nginx/https/ssl:/pki/web
      - ./pki:/pki:Z
      # - ./nginx/https/ssl:/pki/web
  #   # networks:
  #   #   - default
    command: sleep infinity
  #   # command: |
  #   #   if [ -d "./pki/db" ]; then
  #   #   rm -rf "./pki/db";
  #   #   else
  #   #   echo "Папка '/src' не существует.";
  #   #   fi
    

# volumes:
#   pki:

networks:
  external_net:
    driver: bridge
  internal_net:
    name: internal_net
    driver: bridge










# configs:
#   ca-cart:
#     content: | 
#       ca_req.conf
#       [ req ]
#       default_bits = 4096
#       encrypt_key = no
#       default_md = sha256
#       prompt = no
#       utf8 = yes
#       distinguished_name = ca_distinguished_name
#       req_extensions = ca_extensions

#       [ ca_distinguished_name ]
#       C = RU
#       ST = Moscow State
#       L = Moscow
#       O = Bauman Moscow State Technical University
#       CN = Dychakovskaya Anastasia

#       [ ca_extensions ]
#       basicConstraints = critical,CA:TRUE
#       keyUsage = critical,keyCertSign,cRLSign
#       subjectKeyIdentifier = hash