name: infrastructure
services:
  nginx:
    image: "nginx:1.25.4"
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - external_net
      - internal_net
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d        #конф. файл nginx
      - ./nginx/html:/usr/share/nginx/html    #веб-странички
      - ./nginx/https:/etc/nginx/https             #сертификаты и прочее для https
      # - ./nginx/https/ssl/ssl_params:/etc/nginx/             #сертификаты и прочее для https
      # - ./pki:/etc/nginx
    # command: openssl dhparam -out /etc/nginx/https/ssl/dhparam.pem 2048
    # command: sleep infinity
    # depends_on:
    #   - flask

  # flask:
  #   build: ./python/
  #   networks:
  #     internal_net:
  #       aliases:
  #         - flask
  #   volumes:
  #     - ./app:/app
  #   deploy: 
  #     replicas: 2
  #   restart: on-failure
  #   command: python app.py



  ca:
    build: ./certificate/
    container_name: ca-cert
    volumes:
      # - ./pki_conf:/pki
      - ./nginx/https/ssl:/pki/web
      - ./pki:/pki:Z
      # - ./nginx/https/ssl:/pki/web
    env_file:
      - .env
    environment:
      - private_key_size=${private_key_size}

  #   # networks:
  #   #   - default
    # command: sleep infinity
    # command: -c 'echo "hello there"'
    command: >
      -c 'openssl genrsa -out ca.key ${private_key_size} &&
      openssl req -new -key ca.key -out ca.csr -config ./conf/ca_req.conf &&
      mkdir certs db && touch db/index && openssl rand -hex 16 > serial &&
      openssl ca -selfsign -in ca.csr -out ca.crt -config ./conf/ca.conf -batch &&
      openssl req -new -keyout ./web/webserver.key -out webserver.csr -nodes -config ./conf/webserver_req.conf &&
      openssl ca -in webserver.csr -out ./web/webserver.crt -config ./conf/ca.conf -batch'

    # command: >
    #   -c 'openssl genrsa -out ca.key $private_key_size && \
    #   openssl req -new -key ca.key -out ca.csr -config ./conf/ca_req.conf && \
    #   mkdir certs db && touch db/index && openssl rand -hex 16 > serial && \
    #   openssl ca -selfsign -in ca.csr -out ca.crt -config ./conf/ca.conf -batch
      
    #   cp ca.crt /openssl-certs &&
      
    #   openssl req -new -keyout ./web/webserver.key -out webserver.csr -nodes -config ./conf/webserver_req.conf && \
    #   openssl ca -in webserver.csr -out ./web/webserver.crt -config ./conf/ca.conf -batch && \
    #   openssl ca -in webserver.csr -out webserver.crt -config ca.conf && \

    #   cp webserver.crt /openssl-certs && cp webserver.key /openssl-certs'
      
      
      

# volumes:
#   pki:

networks:
  external_net:
    driver: bridge
  internal_net:
    name: internal_net
    driver: bridge










# configs:
#   ca-cart:
#     content: | 
#       ca_req.conf
#       [ req ]
#       default_bits = 4096
#       encrypt_key = no
#       default_md = sha256
#       prompt = no
#       utf8 = yes
#       distinguished_name = ca_distinguished_name
#       req_extensions = ca_extensions

#       [ ca_distinguished_name ]
#       C = RU
#       ST = Moscow State
#       L = Moscow
#       O = Bauman Moscow State Technical University
#       CN = Dychakovskaya Anastasia

#       [ ca_extensions ]
#       basicConstraints = critical,CA:TRUE
#       keyUsage = critical,keyCertSign,cRLSign
#       subjectKeyIdentifier = hash