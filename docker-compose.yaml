name: infrastructure
services:
  nginx:
    image: "nginx:1.25.4"
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - external_net
      - internal_net
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d        #конф. файл nginx
      - ./nginx/html:/usr/share/nginx/html    #веб-странички
      - ./nginx/https:/etc/nginx/https             #сертификаты и прочее для https
      # - ./nginx/https/ssl/ssl_params:/etc/nginx/             #сертификаты и прочее для https
      # - ./pki:/etc/nginx
    # command: openssl dhparam -out /etc/nginx/https/ssl/dhparam.pem 2048
    # command: sleep infinity
    depends_on:
      certs_openssl:
        condition: service_completed_successfully
      dhparam_gen:
        condition: service_completed_successfully
      flask:
        condition: service_started
      

  flask:
    build: ./python/
    networks:
      internal_net:
        aliases:
          - flask
    volumes:
      - ./app:/app
    deploy: 
      replicas: 2
    restart: on-failure
    command: python app.py


  certs_openssl:
    build: ./certificate/
    container_name: certs_openssl
    volumes:
      # - ./pki_conf:/pki
      - ./nginx/https/ssl:/pki/web
      - ./pki:/pki:Z
      # - ./nginx/https/ssl:/pki/web
    env_file:
      - .env
  #   # networks:
  #   #   - default
    # command: sleep infinity
    # command: -c 'echo "hello there"'
    command: >
      -c 'openssl genrsa -out ca.key ${PRIVATE_KEY_SIZE} &&
      openssl req -new -key ca.key -out ca.csr -config ./conf/ca_req.conf &&
      mkdir certs db && touch db/index && openssl rand -hex 16 > serial &&
      openssl ca -selfsign -in ca.csr -out ca.crt -config ./conf/ca.conf -batch &&
      openssl req -new -keyout ./web/webserver.key -out webserver.csr -nodes -config ./conf/webserver_req.conf &&
      openssl ca -in webserver.csr -out ./web/webserver.crt -config ./conf/ca.conf -batch'

  dhparam_gen:
    build: ./certificate/
    container_name: dhparam_gen
    volumes:
      - ./nginx/https:/etc/nginx/https
    command: -c 'openssl dhparam -out /etc/nginx/https/ssl/dhparam.pem ${DHPARAM_SIZE}'

      
      
      

# volumes:
#   pki:

networks:
  external_net:
    driver: bridge
  internal_net:
    name: internal_net
    driver: bridge